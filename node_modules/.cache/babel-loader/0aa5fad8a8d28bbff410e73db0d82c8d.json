{"ast":null,"code":"var _jsxFileName = \"/home/lewagon/code/Eduard-tech/Udemy-React/great_quotes/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Edi\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Eduard\",\n  text: \"Learning Coding is great!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No Quote Found \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}}/comments`,\n          children: \" Load Comments \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/home/lewagon/code/Eduard-tech/Udemy-React/great_quotes/src/pages/QuoteDetail.js"],"names":["useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quote","find","quoteId","path","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,QAApB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAFmB,CAArB;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGR,aAAa,EAA3B;AACA,QAAMS,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAaK,MAAM,CAACG,OAAjD,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,KAAK,CAACK,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEL,KAAK,CAACM,GAAI,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACK,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAaD,CAtBD;;GAAMN,W;UACUP,a,EACCH,S;;;KAFXU,W;AAwBN,eAAeA,WAAf","sourcesContent":["import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Edi\", text: \"Learning React is fun!\" },\n  { id: \"q2\", author: \"Eduard\", text: \"Learning Coding is great!\" },\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (!quote) {\n    return <p> No Quote Found </p>;\n  }\n\n  return (\n    <>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n      <div className=\"centered\">\n        <Link className=\"btn--flat\" to={`${match.url}}/comments`}> Load Comments </Link>\n      </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}